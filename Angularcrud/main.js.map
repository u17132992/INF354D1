{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/generalinformation.service.ts","webpack:///./src/app/generalinformation/generalinformation.component.css","webpack:///./src/app/generalinformation/generalinformation.component.html","webpack:///./src/app/generalinformation/generalinformation.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { GeneralinformationComponent } from './generalinformation/generalinformation.component';\n\nconst routes: Routes = [\n{path: 'generalinformation', component: GeneralinformationComponent }\n\n]\n\n\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forRoot(routes),CommonModule],\n  exports: [RouterModule]\n})\n   \n  \n\nexport class AppRoutingModule { }\nexport const routingComponents = [GeneralinformationComponent]\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align: center\\\">\\n<h1>\\n  Please select an option to inspect\\n</h1>\\n</div>\\n<nav>\\n  <a routerLink=\\\"/generalinformation\\\" routerLinkActive=\\\"active\\\"><button class =\\\"btn btn-success pull-right\\\" >GENERAL INFORMATON</button></a>\\n  <a routerLink=\\\"/\\\" routerLinkActive=\\\"active\\\"><button class =\\\"btn btn-success pull-right\\\" >EMERGENCY CONTACTS</button></a>\\n  <a routerLink=\\\"/\\\" routerLinkActive=\\\"active\\\"><button class =\\\"btn btn-success pull-right\\\" >FREQUENTLY ASKED QUESTIONS</button></a>\\n</nav>\\n\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Angularcrud';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { GeneralinformationService } from './generalinformation.service';  \nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';  \nimport { HttpClientModule, HttpClient } from '@angular/common/http'; \nimport {  \n    MatButtonModule, MatMenuModule, MatIconModule, MatCardModule, MatSidenavModule,MatFormFieldModule,  \n    MatInputModule, MatTooltipModule, MatToolbarModule  \n  } from '@angular/material';  \nimport { MatRadioModule } from '@angular/material/radio';  \nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';  \n\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    routingComponents      \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n   MatButtonModule,\n  MatMenuModule,    \n    MatIconModule,  \n    MatRadioModule,  \n    MatCardModule,  \n    MatSidenavModule,  \n    MatFormFieldModule,  \n    MatInputModule,  \n    MatTooltipModule,  \n    MatToolbarModule,\n    AppRoutingModule \n    \n  ],\n  providers: [HttpClientModule, GeneralinformationService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';  \nimport { HttpHeaders } from '@angular/common/http';  \nimport { Observable } from 'rxjs';  \nimport { Generalinformation } from './generalinformation';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeneralinformationService {\n  url = 'http://localhost:18228/Api/General';  \n    constructor(private http: HttpClient) { }  \n    getAllGeneralinformation(): Observable<Generalinformation[]> {  \n      return this.http.get<Generalinformation[]>(this.url + '/AllGeneralDetails');  \n    }  \n    getGeneralById(  generalinformationId: string): Observable<Generalinformation> {  \n      return this.http.get<Generalinformation>(this.url + '/GetGeneralDetailsById/' + generalinformationId);  \n    }  \n    createGeneralinformation(generalinformation: Generalinformation): Observable<Generalinformation> {  \n      const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \n      return this.http.post<Generalinformation>(this.url + '/InsertGeneralDetails/',  \n      generalinformation, httpOptions);  \n    }  \n    updateGeneralinformation(generalinformation: Generalinformation): Observable<Generalinformation> {  \n      const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \n      return this.http.put<Generalinformation>(this.url + '/UpdateGeneralDetails/',  \n      generalinformation, httpOptions);  \n    }  \n    deleteGeneralinformationById( generalinformationId: string): Observable<Generalinformation> {  \n    console.log(generalinformationId);\n      const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \n      return this.http.delete<Generalinformation>(this.url + '/DeleteGeneralDetails?id=' +generalinformationId,  \n   httpOptions);  \n    }  \n  } ","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dlbmVyYWxpbmZvcm1hdGlvbi9nZW5lcmFsaW5mb3JtYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">  \\n  \\n  <mat-card>  \\n    <mat-toolbar color=\\\"accent\\\">  \\n      <div align=\\\"center\\\" style=\\\"color:white;text-align: right;\\\">  \\n      GENERAL INFORMATION\\n      </div>    \\n    </mat-toolbar>  \\n  <br><br>  \\n    <mat-card-content>  \\n      <form [formGroup]=\\\"generalinformationForm\\\"(ngSubmit)=\\\"onFormSubmit(generalinformationForm.value)\\\">  \\n              <table>  \\n                <tr>  \\n                  <td class=\\\"tbl1\\\">  \\n                    <mat-form-field class=\\\"demo-full-width\\\">  \\n                      <input formControlName=\\\"GeneralDesc\\\" matTooltip=\\\"Enter General Information\\\" matInput placeholder=\\\"General Information\\\">  \\n                    </mat-form-field>  \\n                    <mat-error>  \\n                      <span *ngIf=\\\"!generalinformationForm.get('GeneralDesc').value && generalinformationForm.get('GeneralDesc').touched\\\"></span>  \\n                    </mat-error>  \\n                  </td>         \\n                <tr>  \\n                  \\n                  <td  class=\\\"content-center\\\">  \\n                    <button type=\\\"submit\\\" mat-raised-button color=\\\"accent\\\"matTooltip=\\\"Click Submit Button\\\"[disabled]=\\\"!generalinformationForm.valid\\\">Submit</button>      \\n                    <button type=\\\"reset\\\" mat-raised-button color=\\\"accent\\\"matTooltip=\\\"Click Reset Button\\\" (click)=\\\"resetForm()\\\">Reset</button>  \\n                  </td>  \\n                  <td>  \\n                    <p *ngIf=\\\"dataSaved\\\" style=\\\"color:rgb(0, 128, 0);font-size:20px;font-weight:bold\\\" Class=\\\"success\\\" align=\\\"left\\\">  \\n                      {{massage}}  \\n                    </p>  \\n                  </td>  \\n                </tr>  \\n              </table>  \\n  <br><br>  \\n        <table class=\\\"table\\\" >  \\n            <tr ngclass=\\\"btn-primary\\\">  \\n              <th class=\\\"tbl2\\\">General Description</th>  \\n            </tr>  \\n            <tr *ngFor=\\\"let generalinformation of allGeneralinformations | async\\\">  \\n              <td class=\\\"tbl2\\\">{{generalinformation.GeneralDesc}}</td>  \\n              <td class=\\\"tbl2\\\">  \\n                <button type=\\\"button\\\" class=\\\"btn btn-info\\\"matTooltip=\\\"Click Edit Button\\\"(click)=\\\"loadGeneralinformationToEdit(generalinformation.GeneralInformationID)\\\">Edit</button>  \\n              </td>  \\n              <td class=\\\"tbl2\\\">  \\n                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\"matTooltip=\\\"Click Delete Button\\\"(click)=\\\"deleteGeneralinformation(generalinformation.GeneralInformationID)\\\">Delete</button>  \\n              </td>  \\n            </tr>  \\n    \\n          </table>  \\n      </form>  \\n    </mat-card-content>  \\n  </mat-card>  \\n  </div>  \"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';  \nimport { Observable } from 'rxjs';  \nimport { GeneralinformationService } from '../generalinformation.service'; \nimport { Generalinformation } from '../generalinformation';\n\n@Component({\n  selector: 'app-generalinformation',\n  templateUrl: './generalinformation.component.html',\n  styleUrls: ['./generalinformation.component.css']\n})\nexport class GeneralinformationComponent implements OnInit {\n  dataSaved = false;  \n   generalinformationForm: any;  \n  allGeneralinformations: Observable<Generalinformation[]>;  \n  generalinformationIdUpdate = null;  \n  massage = null; \n\n  constructor(private formbulider: FormBuilder, private generalinformationService:GeneralinformationService) { }\n\n  ngOnInit() {\n    this.generalinformationForm = this.formbulider.group({  \n            GeneralDesc: ['', [Validators.required]],  \n    });\n    this.loadAllGeneralinformations();\n  }\n  loadAllGeneralinformations(){\n    this.allGeneralinformations = this.generalinformationService.getAllGeneralinformation();\n  }\n  onFormSubmit() \n        {this.dataSaved = false;  \n        const generalinformation = this.generalinformationForm.value;  \n        this.CreateGeneralinformation(generalinformation);  \n        this.generalinformationForm.reset();  \n      } \n    loadGeneralinformationToEdit(generalinformationId: string) {  \n          this.generalinformationService.getGeneralById(generalinformationId).subscribe(generalinformation=> {  \n            this.massage = null;  \n            this.dataSaved = false;  \n            this.generalinformationIdUpdate = generalinformation.GeneralInformationID;  \n            this.generalinformationForm.controls['GeneralDesc'].setValue\n      (generalinformation.GeneralDesc);   \n      });\n    }\nCreateGeneralinformation(generalinformation: Generalinformation)\n{\n  if (this.generalinformationIdUpdate == null) {  \n          this.generalinformationService.createGeneralinformation(generalinformation).subscribe(  \n            () => {  \n              this.dataSaved = true;  \n              this.massage = 'Record saved Successfully';  \n              this.loadAllGeneralinformations();  \n              this.generalinformationIdUpdate = null;  \n              this.generalinformationForm.reset();  \n            }  \n          );  \n        } else {  \n            generalinformation.GeneralInformationID = this.generalinformationIdUpdate;  \n          this.generalinformationService.updateGeneralinformation(generalinformation).subscribe(() => {  \n            this.dataSaved = true;  \n            this.massage = 'Record Updated Successfully';  \n            this.loadAllGeneralinformations();  \n            this.generalinformationIdUpdate = null;  \n            this.generalinformationForm.reset();  \n          });  \n        }  \n      }  \n    deleteGeneralinformation(employeeId: string) {  \n      console.log(employeeId);\n          if (confirm(\"Are you sure you want to delete this ?\")) {   \n          this.generalinformationService.deleteGeneralinformationById(employeeId).subscribe(() => {  \n            this.dataSaved = true;  \n            this.massage = 'Record Deleted Succefully';  \n            this.loadAllGeneralinformations();  \n            this.generalinformationIdUpdate = null;  \n            this.generalinformationForm.reset();  \n        \n          });  \n        }  \n      }  \n        resetForm() {  \n          this.generalinformationForm.reset();  \n          this.massage = null;  \n          this.dataSaved = false;  \n        }  \n      }  \n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}